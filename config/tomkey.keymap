/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <physical_layouts.dtsi>

/ {
    chosen {
        zmk,physical-layout = &tomkey_layout;
    };

    tomkey_layout: tomkey_layout {
        compatible = "zmk,physical-layout";
        display-name = "Tomkey Default";

        keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0    0       0     0     0>  // Q
            , <&key_physical_attrs 100 100  100    0       0     0     0>  // W
            , <&key_physical_attrs 100 100  200    0       0     0     0>  // E
            , <&key_physical_attrs 100 100  300    0       0     0     0>  // R
            , <&key_physical_attrs 100 100  400    0       0     0     0>  // T
            
            , <&key_physical_attrs 100 100  800    0       0     0     0>  // Y
            , <&key_physical_attrs 100 100  900    0       0     0     0>  // U
            , <&key_physical_attrs 100 100 1000    0       0     0     0>  // I
            , <&key_physical_attrs 100 100 1100    0       0     0     0>  // O
            , <&key_physical_attrs 100 100 1200    0       0     0     0>  // P

            , <&key_physical_attrs 100 100    0  100       0     0     0>  // A
            , <&key_physical_attrs 100 100  100  100       0     0     0>  // S
            , <&key_physical_attrs 100 100  200  100       0     0     0>  // D
            , <&key_physical_attrs 100 100  300  100       0     0     0>  // F
            , <&key_physical_attrs 100 100  400  100       0     0     0>  // G
            , <&key_physical_attrs 100 100  500  100       0     0     0>  // MO6
            
            , <&key_physical_attrs 100 100  700  100       0     0     0>  // Backslash
            , <&key_physical_attrs 100 100  800  100       0     0     0>  // H
            , <&key_physical_attrs 100 100  900  100       0     0     0>  // J
            , <&key_physical_attrs 100 100 1000  100       0     0     0>  // K
            , <&key_physical_attrs 100 100 1100  100       0     0     0>  // L
            , <&key_physical_attrs 100 100 1200  100       0     0     0>  // Minus

            , <&key_physical_attrs 100 100    0  200       0     0     0>  // Z
            , <&key_physical_attrs 100 100  100  200       0     0     0>  // X
            , <&key_physical_attrs 100 100  200  200       0     0     0>  // C
            , <&key_physical_attrs 100 100  300  200       0     0     0>  // V
            , <&key_physical_attrs 100 100  400  200       0     0     0>  // B
            , <&key_physical_attrs 100 100  500  200       0     0     0>  // Left bracket
            
            , <&key_physical_attrs 100 100  700  200       0     0     0>  // Right bracket
            , <&key_physical_attrs 100 100  800  200       0     0     0>  // N
            , <&key_physical_attrs 100 100  900  200       0     0     0>  // M
            , <&key_physical_attrs 100 100 1000  200       0     0     0>  // Comma
            , <&key_physical_attrs 100 100 1100  200       0     0     0>  // Dot
            , <&key_physical_attrs 100 100 1200  200       0     0     0>  // LT2 Slash

            , <&key_physical_attrs 100 100    0  300       0     0     0>  // LCtrl
            , <&key_physical_attrs 100 100  100  300       0     0     0>  // LAlt
            , <&key_physical_attrs 100 100  200  300       0     0     0>  // LCmd
            , <&key_physical_attrs 100 100  300  300       0     0     0>  // LShift
            , <&key_physical_attrs 100 100  400  300       0     0     0>  // LT4 Space
            , <&key_physical_attrs 100 100  500  300       0     0     0>  // Cmd+Space
            
            , <&key_physical_attrs 100 100  700  300       0     0     0>  // Enter
            , <&key_physical_attrs 100 100  800  300       0     0     0>  // LT3 Backspace
            
            , <&key_physical_attrs 100 100 1200  300       0     0     0>  // LT5 Escape
            ;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp Q      &kp W         &kp E             &kp R           &kp T                                                 &kp Y            &kp U     &kp I         &kp O    &kp P
&kp A      &kp S         &kp D             &kp F           &kp G        &mo 6                 &kp BACKSLASH      &kp H            &kp J     &kp K         &kp L    &kp MINUS
&kp Z      &kp X         &kp C             &kp V           &kp B        &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N            &kp M     &kp COMMA     &kp DOT  &lt 2 SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &lt 4 SPACE  &kp LG(SPACE)         &kp ENTER          &lt 3 BACKSPACE                                   &lt 5 ESCAPE
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
&trans         &trans         &trans            &trans          &trans                                           &trans           &trans    &trans        &trans      &trans
&trans         &trans         &trans            &trans          &trans       &trans           &trans             &trans           &mkp LCLK &mkp MCLK     &mkp RCLK   &trans
&trans         &trans         &trans            &trans          &trans       &trans           &trans             &trans           &trans    &trans        &trans      &trans
&kp LCTRL      &kp LEFT_ALT   &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans       &trans           &trans             &mo 3                                                &trans
            >;
        };

        SCROLL {
            display-name = "Scroll";
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            display-name = "Arrow";
            bindings = <
&kp GRAVE  &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9            &kp NUMBER_0                                   &trans  &kp RC(LEFT_ARROW)  &kp UP_ARROW      &kp RC(RIGHT_ARROW)  &kp LG(P)
&kp TAB    &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW)) &kp LEFT_BRACKET   &trans      &trans  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LG(K)
&kp LCMD   &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW)) &kp RIGHT_BRACKET  &trans      &trans  &trans  &trans              &kp LC(UP_ARROW)  &trans               &kp LG(L)
&trans     &trans                  &kp LEFT_SHIFT  &trans                  &trans             &trans      &trans  &trans                                                              &trans
            >;
        };

        NUM {
            display-name = "Number";
            bindings = <
&kp GRAVE                &kp NUMBER_7  &kp NUMBER_8  &kp LG(LS(NUMBER_4))  &kp PLUS                          &kp BACKSLASH    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SEMICOLON
&kp SLASH                &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6          &kp ASTERISK  &trans      &trans  &kp EXCLAMATION  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SQT
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp PERIOD    &trans      &trans  &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans                   &trans        &trans        &trans                &trans        &trans      &trans  &kp LEFT_SHIFT                                             &trans
            >;
        };

        FUNCTION {
            display-name = "Function";
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        SYSTEM {
            display-name = "System";
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans                      &bt BT_PRV     &bt BT_NXT       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans      &trans  &trans         &trans           &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &trans      &trans  &trans         &trans           &trans        &trans        &trans
&trans         &trans     &trans     &trans     &trans  &trans      &trans  &trans                                                      &trans
            >;
        };
    };
};
