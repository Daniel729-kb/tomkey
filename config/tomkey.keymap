/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Layer definitions for clarity

#define DEFAULT 0
#define MOUSE 1
#define NUM 2
#define ARROW 3
#define SCROLL 4
#define FUNCTION 5
#define SYSTEM 6

// Configure existing behaviors

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    // ========================
    // COMBOS SECTION
    // ========================

    combos {
        compatible = "zmk,combos";

        // Mouse layer toggle - J+K keys

        mouse_toggle {
            bindings = <&tog MOUSE>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        // Navigation combos

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <11 12>;
        };

        // Punctuation combos

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        // Letter combos

        shift_z {
            bindings = <&kp LS(Z)>;
            key-positions = <22 23>;
        };

        question_mark {
            bindings = <&kp RS(SLASH)>;
            key-positions = <32 33>;
        };

        bs {
            bindings = <&kp BSPC>;
            key-positions = <8 9>;
        };
    };

    // ========================
    // MACROS SECTION
    // ========================

    macros {
        // Command+Space macro for Mac

        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CMD_SPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // Left: 23 keys, Right: 20 keys = 43 total

            bindings = <
&kp Q             &kp W     &kp E             &kp R      &kp T        &kp Y             &kp U              &lt 4 I          &kp O      &kp P
&kp A             &kp S     &kp D             &kp F      &kp G        &mo 6             &kp AT_SIGN        &kp H            &kp J      &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X     &kp C             &kp V      &kp B        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N            &kp M      &kp COMMA  &kp DOT  &lt 2 SLASH
&kp LEFT_ALT      &kp LGUI  &kp LEFT_CONTROL  &lt 6 TAB  &lt 2 SPACE  &cmd_space        &lt 2 SPACE        &lt 3 BACKSPACE  &lt 5 DEL
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
&trans     &trans        &trans            &trans          &trans  &trans  &trans  &trans  &trans     &trans
&trans     &trans        &trans            &trans          &trans  &trans  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans     &trans        &trans            &trans          &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans  &trans  &trans  &mo 3   &trans
            >;
        };

        NUM {
            display-name = "Number";
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        ARROW {
            display-name = "Arrow";
            bindings = <
&kp GRAVE  &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9             &kp NUMBER_0       &trans  &kp RC(LEFT_ARROW)  &kp UP_ARROW  &kp RC(RIGHT_ARROW)  &kp LG(P)
&kp TAB    &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans  &trans              &trans        &kp LEFT_ARROW       &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp LG(K)
&kp LCMD   &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans  &trans              &trans        &trans               &kp LC(UP_ARROW)  &trans           &kp LG(L)
&trans     &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans  &trans              &trans        &trans
            >;
        };

        SCROLL {
            display-name = "Scroll";
            bindings = <
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &trans        &trans        &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans         &trans        &trans                &trans
&trans           &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        FUNCTION {
            display-name = "Function";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp F1  &kp F2   &kp F3  &kp F4   &kp F5
&trans  &trans  &trans  &trans  &trans  &trans  &kp F13  &kp F6  &kp F7   &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans   &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &kp F12
            >;
        };

        SYSTEM {
            display-name = "System";
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans  &bt BT_PRV   &bt BT_NXT   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans       &trans       &trans        &trans        &trans        &trans  &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &bootloader  &bootloader  &trans        &trans        &trans        &trans  &trans
&trans         &trans     &trans     &trans     &trans  &trans       &trans       &trans        &trans
            >;
        };
    };
};
